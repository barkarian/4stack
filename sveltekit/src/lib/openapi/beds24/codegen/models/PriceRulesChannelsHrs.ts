/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PriceRulesChannelsHrs
 */
export interface PriceRulesChannelsHrs {
    /**
     * 
     * @type {boolean}
     * @memberof PriceRulesChannelsHrs
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PriceRulesChannelsHrs
     */
    rateCode?: PriceRulesChannelsHrsRateCodeEnum;
}


/**
 * @export
 */
export const PriceRulesChannelsHrsRateCodeEnum = {
    StandardDoubleHrs1: 'standardDoubleHRS1',
    StandardDoubleTrade1: 'standardDoubleTrade1',
    StandardDoubleSpecial1: 'standardDoubleSpecial1',
    StandardDoubleWeekend1: 'standardDoubleWeekend1',
    StandardDoubleHotdeal1: 'standardDoubleHotdeal1',
    StandardDoubleTrade2: 'standardDoubleTrade2',
    StandardDoubleSpecial2: 'standardDoubleSpecial2',
    StandardDoubleHotdeal2: 'standardDoubleHotdeal2',
    StandardDoubleTrade3: 'standardDoubleTrade3',
    StandardDoubleSpecial3: 'standardDoubleSpecial3',
    StandardDoubleHotdeal3: 'standardDoubleHotdeal3',
    StandardSingleHrs1: 'standardSingleHRS1',
    StandardSingleTrade1: 'standardSingleTrade1',
    StandardSingleSpecial1: 'standardSingleSpecial1',
    StandardSingleWeekend1: 'standardSingleWeekend1',
    StandardSingleHotdeal1: 'standardSingleHotdeal1',
    StandardSingleTrade2: 'standardSingleTrade2',
    StandardSingleSpecial2: 'standardSingleSpecial2',
    StandardSingleHotdeal2: 'standardSingleHotdeal2',
    StandardSingleTrade3: 'standardSingleTrade3',
    StandardSingleSpecial3: 'standardSingleSpecial3',
    StandardSingleHotdeal3: 'standardSingleHotdeal3',
    _3BedRoom: '3BedRoom',
    _4BedRoom: '4BedRoom',
    DoubleApartment: 'doubleApartment',
    DoubleBalcony: 'doubleBalcony',
    DoubleBudget: 'doubleBudget',
    DoubleBusiness: 'doubleBusiness',
    DoubleComfort: 'doubleComfort',
    DoubleFamily: 'doubleFamily',
    DoubleJuniorSuite: 'doubleJuniorSuite',
    DoubleLakeView: 'doubleLakeView',
    DoubleSeaView: 'doubleSeaView',
    DoubleMountainView: 'doubleMountainView',
    DoublePoolView: 'doublePoolView',
    DoubleRiverView: 'doubleRiverView',
    DoubleSuite: 'doubleSuite',
    DoubleTerrace: 'doubleTerrace',
    SingleApartment: 'singleApartment',
    SingleBalcony: 'singleBalcony',
    SingleBudget: 'singleBudget',
    SingleBusiness: 'singleBusiness',
    SingleComfort: 'singleComfort',
    SingleFamily: 'singleFamily',
    SingleJuniorSuite: 'singleJuniorSuite',
    SingleLakeView: 'singleLakeView',
    SingleSeaView: 'singleSeaView',
    SingleMountainView: 'singleMountainView',
    SinglePoolView: 'singlePoolView',
    SingleRiverView: 'singleRiverView',
    SingleSuite: 'singleSuite',
    SingleTerrace: 'singleTerrace'
} as const;
export type PriceRulesChannelsHrsRateCodeEnum = typeof PriceRulesChannelsHrsRateCodeEnum[keyof typeof PriceRulesChannelsHrsRateCodeEnum];


/**
 * Check if a given object implements the PriceRulesChannelsHrs interface.
 */
export function instanceOfPriceRulesChannelsHrs(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PriceRulesChannelsHrsFromJSON(json: any): PriceRulesChannelsHrs {
    return PriceRulesChannelsHrsFromJSONTyped(json, false);
}

export function PriceRulesChannelsHrsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriceRulesChannelsHrs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'rateCode': !exists(json, 'rateCode') ? undefined : json['rateCode'],
    };
}

export function PriceRulesChannelsHrsToJSON(value?: PriceRulesChannelsHrs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'rateCode': value.rateCode,
    };
}


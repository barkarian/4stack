/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AirbnbSettingsGetAllOfProperties1 } from './AirbnbSettingsGetAllOfProperties1';
import {
    AirbnbSettingsGetAllOfProperties1FromJSON,
    AirbnbSettingsGetAllOfProperties1FromJSONTyped,
    AirbnbSettingsGetAllOfProperties1ToJSON,
} from './AirbnbSettingsGetAllOfProperties1';

/**
 * 
 * @export
 * @interface AirbnbSettingsGet
 */
export interface AirbnbSettingsGet {
    /**
     * 
     * @type {string}
     * @memberof AirbnbSettingsGet
     */
    channel?: string;
    /**
     * 
     * @type {Array<AirbnbSettingsGetAllOfProperties1>}
     * @memberof AirbnbSettingsGet
     */
    properties?: Array<AirbnbSettingsGetAllOfProperties1>;
}

/**
 * Check if a given object implements the AirbnbSettingsGet interface.
 */
export function instanceOfAirbnbSettingsGet(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AirbnbSettingsGetFromJSON(json: any): AirbnbSettingsGet {
    return AirbnbSettingsGetFromJSONTyped(json, false);
}

export function AirbnbSettingsGetFromJSONTyped(json: any, ignoreDiscriminator: boolean): AirbnbSettingsGet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channel': !exists(json, 'channel') ? undefined : json['channel'],
        'properties': !exists(json, 'properties') ? undefined : ((json['properties'] as Array<any>).map(AirbnbSettingsGetAllOfProperties1FromJSON)),
    };
}

export function AirbnbSettingsGetToJSON(value?: AirbnbSettingsGet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channel': value.channel,
        'properties': value.properties === undefined ? undefined : ((value.properties as Array<any>).map(AirbnbSettingsGetAllOfProperties1ToJSON)),
    };
}


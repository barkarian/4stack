/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UnsuccessfulApiResponse
 */
export interface UnsuccessfulApiResponse {
    /**
     * 
     * @type {boolean}
     * @memberof UnsuccessfulApiResponse
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof UnsuccessfulApiResponse
     */
    type: string;
    /**
     * 
     * @type {number}
     * @memberof UnsuccessfulApiResponse
     */
    code: number;
    /**
     * 
     * @type {string}
     * @memberof UnsuccessfulApiResponse
     */
    error: string;
}

/**
 * Check if a given object implements the UnsuccessfulApiResponse interface.
 */
export function instanceOfUnsuccessfulApiResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "success" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "error" in value;

    return isInstance;
}

export function UnsuccessfulApiResponseFromJSON(json: any): UnsuccessfulApiResponse {
    return UnsuccessfulApiResponseFromJSONTyped(json, false);
}

export function UnsuccessfulApiResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnsuccessfulApiResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': json['success'],
        'type': json['type'],
        'code': json['code'],
        'error': json['error'],
    };
}

export function UnsuccessfulApiResponseToJSON(value?: UnsuccessfulApiResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'type': value.type,
        'code': value.code,
        'error': value.error,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StripeChargePaymentMethod
 */
export interface StripeChargePaymentMethod {
    /**
     * 
     * @type {string}
     * @memberof StripeChargePaymentMethod
     */
    action?: string;
    /**
     * 
     * @type {number}
     * @memberof StripeChargePaymentMethod
     */
    bookingId?: number;
    /**
     * 
     * @type {string}
     * @memberof StripeChargePaymentMethod
     */
    stripePaymentMethodId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof StripeChargePaymentMethod
     */
    capture?: boolean;
    /**
     * 
     * @type {number}
     * @memberof StripeChargePaymentMethod
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof StripeChargePaymentMethod
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof StripeChargePaymentMethod
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof StripeChargePaymentMethod
     */
    moto?: boolean;
    /**
     * 
     * @type {string}
     * @memberof StripeChargePaymentMethod
     */
    source?: string;
}

/**
 * Check if a given object implements the StripeChargePaymentMethod interface.
 */
export function instanceOfStripeChargePaymentMethod(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StripeChargePaymentMethodFromJSON(json: any): StripeChargePaymentMethod {
    return StripeChargePaymentMethodFromJSONTyped(json, false);
}

export function StripeChargePaymentMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): StripeChargePaymentMethod {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': !exists(json, 'action') ? undefined : json['action'],
        'bookingId': !exists(json, 'bookingId') ? undefined : json['bookingId'],
        'stripePaymentMethodId': !exists(json, 'stripePaymentMethodId') ? undefined : json['stripePaymentMethodId'],
        'capture': !exists(json, 'capture') ? undefined : json['capture'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'moto': !exists(json, 'moto') ? undefined : json['moto'],
        'source': !exists(json, 'source') ? undefined : json['source'],
    };
}

export function StripeChargePaymentMethodToJSON(value?: StripeChargePaymentMethod | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'bookingId': value.bookingId,
        'stripePaymentMethodId': value.stripePaymentMethodId,
        'capture': value.capture,
        'amount': value.amount,
        'currency': value.currency,
        'description': value.description,
        'moto': value.moto,
        'source': value.source,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyUpsellItemsInner
 */
export interface PropertyUpsellItemsInner {
    /**
     * 
     * @type {number}
     * @memberof PropertyUpsellItemsInner
     */
    index?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PropertyUpsellItemsInner
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PropertyUpsellItemsInner
     */
    type?: PropertyUpsellItemsInnerTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof PropertyUpsellItemsInner
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof PropertyUpsellItemsInner
     */
    per?: PropertyUpsellItemsInnerPerEnum;
    /**
     * 
     * @type {string}
     * @memberof PropertyUpsellItemsInner
     */
    period?: PropertyUpsellItemsInnerPeriodEnum;
    /**
     * 
     * @type {number}
     * @memberof PropertyUpsellItemsInner
     */
    vat?: number;
}


/**
 * @export
 */
export const PropertyUpsellItemsInnerTypeEnum = {
    NotUsed: 'notUsed',
    Optional: 'optional',
    OptionalQty: 'optionalQty',
    OptionalPercentage: 'optionalPercentage',
    Obligatory: 'obligatory',
    ObligatoryCleaning: 'obligatoryCleaning',
    ObligatoryTax: 'obligatoryTax',
    ObligatoryPercentTax: 'obligatoryPercentTax',
    ObligatoryPercent: 'obligatoryPercent'
} as const;
export type PropertyUpsellItemsInnerTypeEnum = typeof PropertyUpsellItemsInnerTypeEnum[keyof typeof PropertyUpsellItemsInnerTypeEnum];

/**
 * @export
 */
export const PropertyUpsellItemsInnerPerEnum = {
    Booking: 'booking',
    Room: 'room',
    Person: 'person',
    Adult: 'adult',
    Child: 'child'
} as const;
export type PropertyUpsellItemsInnerPerEnum = typeof PropertyUpsellItemsInnerPerEnum[keyof typeof PropertyUpsellItemsInnerPerEnum];

/**
 * @export
 */
export const PropertyUpsellItemsInnerPeriodEnum = {
    OneTime: 'oneTime',
    Daily: 'daily',
    DailyPlusOne: 'dailyPlusOne',
    Weekly: 'weekly',
    Refundable: 'refundable'
} as const;
export type PropertyUpsellItemsInnerPeriodEnum = typeof PropertyUpsellItemsInnerPeriodEnum[keyof typeof PropertyUpsellItemsInnerPeriodEnum];


/**
 * Check if a given object implements the PropertyUpsellItemsInner interface.
 */
export function instanceOfPropertyUpsellItemsInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyUpsellItemsInnerFromJSON(json: any): PropertyUpsellItemsInner {
    return PropertyUpsellItemsInnerFromJSONTyped(json, false);
}

export function PropertyUpsellItemsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyUpsellItemsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'index': !exists(json, 'index') ? undefined : json['index'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'per': !exists(json, 'per') ? undefined : json['per'],
        'period': !exists(json, 'period') ? undefined : json['period'],
        'vat': !exists(json, 'vat') ? undefined : json['vat'],
    };
}

export function PropertyUpsellItemsInnerToJSON(value?: PropertyUpsellItemsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'index': value.index,
        'enabled': value.enabled,
        'type': value.type,
        'amount': value.amount,
        'per': value.per,
        'period': value.period,
        'vat': value.vat,
    };
}


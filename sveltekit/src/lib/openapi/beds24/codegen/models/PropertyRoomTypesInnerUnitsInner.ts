/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyRoomTypesInnerUnitsInner
 */
export interface PropertyRoomTypesInnerUnitsInner {
    /**
     * 
     * @type {number}
     * @memberof PropertyRoomTypesInnerUnitsInner
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerUnitsInner
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerUnitsInner
     */
    name2?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerUnitsInner
     */
    name3?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerUnitsInner
     */
    statusColor?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerUnitsInner
     */
    statusText?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerUnitsInner
     */
    note?: string;
}

/**
 * Check if a given object implements the PropertyRoomTypesInnerUnitsInner interface.
 */
export function instanceOfPropertyRoomTypesInnerUnitsInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyRoomTypesInnerUnitsInnerFromJSON(json: any): PropertyRoomTypesInnerUnitsInner {
    return PropertyRoomTypesInnerUnitsInnerFromJSONTyped(json, false);
}

export function PropertyRoomTypesInnerUnitsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyRoomTypesInnerUnitsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'name2': !exists(json, 'name2') ? undefined : json['name2'],
        'name3': !exists(json, 'name3') ? undefined : json['name3'],
        'statusColor': !exists(json, 'statusColor') ? undefined : json['statusColor'],
        'statusText': !exists(json, 'statusText') ? undefined : json['statusText'],
        'note': !exists(json, 'note') ? undefined : json['note'],
    };
}

export function PropertyRoomTypesInnerUnitsInnerToJSON(value?: PropertyRoomTypesInnerUnitsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'name2': value.name2,
        'name3': value.name3,
        'statusColor': value.statusColor,
        'statusText': value.statusText,
        'note': value.note,
    };
}


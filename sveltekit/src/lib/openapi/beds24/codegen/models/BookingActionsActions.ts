/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BookingActionsActions
 */
export interface BookingActionsActions {
    /**
     * New bookings only - Send guest an email booking confirmation
     * @type {boolean}
     * @memberof BookingActionsActions
     */
    notifyGuest?: boolean;
    /**
     * New bookings only - Send host an email booking confirmation.
     * @type {boolean}
     * @memberof BookingActionsActions
     */
    notifyHost?: boolean;
    /**
     * New bookings only - Use room dependency settings to assign booking to a different room type or the first free unit within the room type.
     * @type {boolean}
     * @memberof BookingActionsActions
     */
    assignBooking?: boolean;
    /**
     * New bookings only - Do not save the booking if room has no availability.
     * @type {boolean}
     * @memberof BookingActionsActions
     */
    checkAvailability?: boolean;
    /**
     * New bookings only - Puts all bookings with this action set to true into a group booking
     * @type {any}
     * @memberof BookingActionsActions
     */
    makeGroup?: any | null;
    /**
     * Existing bookings only - Assign invoice number to the booking without specifying an invoicee.
     * @type {boolean}
     * @memberof BookingActionsActions
     */
    assignInvoiceNumber?: boolean;
    /**
     * Existing bookings only - Assign invoice number to the booking with a specific invoicee.
     * @type {number}
     * @memberof BookingActionsActions
     */
    assignInvoiceNumberInvoicee?: number;
    /**
     * New bookings only - If a price is provided, but no invoice charges, this option will create a charge using the price value and the default description.
     * @type {boolean}
     * @memberof BookingActionsActions
     */
    autoInvoiceItemCharge?: boolean;
    /**
     * Existing bookings only - Delete all existing invoice items. (locked invoices cannot be deleted)
     * @type {boolean}
     * @memberof BookingActionsActions
     */
    deleteInvoice?: boolean;
    /**
     * Any bookings - Allow the booking to trigger webhooks if it is new, modified, or cancelled.
     * @type {boolean}
     * @memberof BookingActionsActions
     */
    allowWebhooks?: boolean;
    /**
     * New bookings - Automatically add all mandatory upsell items to the booking.
     * @type {boolean}
     * @memberof BookingActionsActions
     */
    autoAddUpsellItems?: boolean;
    /**
     * New bookings - Add upsell items matching the indexes of the upsell items found at Settings -> Booking Engine -> Upsell Items
     * @type {Array<number>}
     * @memberof BookingActionsActions
     */
    addUpsellItem?: Array<number>;
}

/**
 * Check if a given object implements the BookingActionsActions interface.
 */
export function instanceOfBookingActionsActions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BookingActionsActionsFromJSON(json: any): BookingActionsActions {
    return BookingActionsActionsFromJSONTyped(json, false);
}

export function BookingActionsActionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookingActionsActions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'notifyGuest': !exists(json, 'notifyGuest') ? undefined : json['notifyGuest'],
        'notifyHost': !exists(json, 'notifyHost') ? undefined : json['notifyHost'],
        'assignBooking': !exists(json, 'assignBooking') ? undefined : json['assignBooking'],
        'checkAvailability': !exists(json, 'checkAvailability') ? undefined : json['checkAvailability'],
        'makeGroup': !exists(json, 'makeGroup') ? undefined : json['makeGroup'],
        'assignInvoiceNumber': !exists(json, 'assignInvoiceNumber') ? undefined : json['assignInvoiceNumber'],
        'assignInvoiceNumberInvoicee': !exists(json, 'assignInvoiceNumberInvoicee') ? undefined : json['assignInvoiceNumberInvoicee'],
        'autoInvoiceItemCharge': !exists(json, 'autoInvoiceItemCharge') ? undefined : json['autoInvoiceItemCharge'],
        'deleteInvoice': !exists(json, 'deleteInvoice') ? undefined : json['deleteInvoice'],
        'allowWebhooks': !exists(json, 'allowWebhooks') ? undefined : json['allowWebhooks'],
        'autoAddUpsellItems': !exists(json, 'autoAddUpsellItems') ? undefined : json['autoAddUpsellItems'],
        'addUpsellItem': !exists(json, 'addUpsellItem') ? undefined : json['addUpsellItem'],
    };
}

export function BookingActionsActionsToJSON(value?: BookingActionsActions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'notifyGuest': value.notifyGuest,
        'notifyHost': value.notifyHost,
        'assignBooking': value.assignBooking,
        'checkAvailability': value.checkAvailability,
        'makeGroup': value.makeGroup,
        'assignInvoiceNumber': value.assignInvoiceNumber,
        'assignInvoiceNumberInvoicee': value.assignInvoiceNumberInvoicee,
        'autoInvoiceItemCharge': value.autoInvoiceItemCharge,
        'deleteInvoice': value.deleteInvoice,
        'allowWebhooks': value.allowWebhooks,
        'autoAddUpsellItems': value.autoAddUpsellItems,
        'addUpsellItem': value.addUpsellItem,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChannelsAirbnbPostRequestInner
 */
export interface ChannelsAirbnbPostRequestInner {
    /**
     * 
     * @type {string}
     * @memberof ChannelsAirbnbPostRequestInner
     */
    airbnbUserId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ChannelsAirbnbPostRequestInner
     */
    airbnbListingId?: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelsAirbnbPostRequestInner
     */
    roomId?: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelsAirbnbPostRequestInner
     */
    propertyId?: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelsAirbnbPostRequestInner
     */
    action?: ChannelsAirbnbPostRequestInnerActionEnum;
    /**
     * 
     * @type {string}
     * @memberof ChannelsAirbnbPostRequestInner
     */
    connect?: ChannelsAirbnbPostRequestInnerConnectEnum;
    /**
     * 
     * @type {boolean}
     * @memberof ChannelsAirbnbPostRequestInner
     */
    importBlockedDates?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ChannelsAirbnbPostRequestInner
     */
    importBookings?: boolean;
}


/**
 * @export
 */
export const ChannelsAirbnbPostRequestInnerActionEnum = {
    ImportAsNewProperty: 'importAsNewProperty',
    ImportToExistingProperty: 'importToExistingProperty',
    ConnectToExistingRoom: 'connectToExistingRoom',
    DisconnectRoom: 'disconnectRoom'
} as const;
export type ChannelsAirbnbPostRequestInnerActionEnum = typeof ChannelsAirbnbPostRequestInnerActionEnum[keyof typeof ChannelsAirbnbPostRequestInnerActionEnum];

/**
 * @export
 */
export const ChannelsAirbnbPostRequestInnerConnectEnum = {
    None: 'none',
    Inventory: 'inventory',
    Limited: 'limited',
    Full: 'full'
} as const;
export type ChannelsAirbnbPostRequestInnerConnectEnum = typeof ChannelsAirbnbPostRequestInnerConnectEnum[keyof typeof ChannelsAirbnbPostRequestInnerConnectEnum];


/**
 * Check if a given object implements the ChannelsAirbnbPostRequestInner interface.
 */
export function instanceOfChannelsAirbnbPostRequestInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelsAirbnbPostRequestInnerFromJSON(json: any): ChannelsAirbnbPostRequestInner {
    return ChannelsAirbnbPostRequestInnerFromJSONTyped(json, false);
}

export function ChannelsAirbnbPostRequestInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelsAirbnbPostRequestInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'airbnbUserId': !exists(json, 'airbnbUserId') ? undefined : json['airbnbUserId'],
        'airbnbListingId': !exists(json, 'airbnbListingId') ? undefined : json['airbnbListingId'],
        'roomId': !exists(json, 'roomId') ? undefined : json['roomId'],
        'propertyId': !exists(json, 'propertyId') ? undefined : json['propertyId'],
        'action': !exists(json, 'action') ? undefined : json['action'],
        'connect': !exists(json, 'connect') ? undefined : json['connect'],
        'importBlockedDates': !exists(json, 'importBlockedDates') ? undefined : json['importBlockedDates'],
        'importBookings': !exists(json, 'importBookings') ? undefined : json['importBookings'],
    };
}

export function ChannelsAirbnbPostRequestInnerToJSON(value?: ChannelsAirbnbPostRequestInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'airbnbUserId': value.airbnbUserId,
        'airbnbListingId': value.airbnbListingId,
        'roomId': value.roomId,
        'propertyId': value.propertyId,
        'action': value.action,
        'connect': value.connect,
        'importBlockedDates': value.importBlockedDates,
        'importBookings': value.importBookings,
    };
}


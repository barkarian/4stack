/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AirbnbListingAirbnbListingAmenitiesInner } from './AirbnbListingAirbnbListingAmenitiesInner';
import {
    AirbnbListingAirbnbListingAmenitiesInnerFromJSON,
    AirbnbListingAirbnbListingAmenitiesInnerFromJSONTyped,
    AirbnbListingAirbnbListingAmenitiesInnerToJSON,
} from './AirbnbListingAirbnbListingAmenitiesInner';
import type { AirbnbListingAirbnbListingCheckInOption } from './AirbnbListingAirbnbListingCheckInOption';
import {
    AirbnbListingAirbnbListingCheckInOptionFromJSON,
    AirbnbListingAirbnbListingCheckInOptionFromJSONTyped,
    AirbnbListingAirbnbListingCheckInOptionToJSON,
} from './AirbnbListingAirbnbListingCheckInOption';

/**
 * 
 * @export
 * @interface AirbnbListingAirbnbListing
 */
export interface AirbnbListingAirbnbListing {
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    propertyTypeCategory?: string;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    roomTypeCategory?: string;
    /**
     * 
     * @type {number}
     * @memberof AirbnbListingAirbnbListing
     */
    bedrooms?: number;
    /**
     * 
     * @type {number}
     * @memberof AirbnbListingAirbnbListing
     */
    bathrooms?: number;
    /**
     * 
     * @type {number}
     * @memberof AirbnbListingAirbnbListing
     */
    beds?: number;
    /**
     * 
     * @type {AirbnbListingAirbnbListingCheckInOption}
     * @memberof AirbnbListingAirbnbListing
     */
    checkInOption?: AirbnbListingAirbnbListingCheckInOption;
    /**
     * 
     * @type {boolean}
     * @memberof AirbnbListingAirbnbListing
     */
    hasAvailability?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    street?: string;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    zipcode?: string;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    countryCode?: string;
    /**
     * 
     * @type {number}
     * @memberof AirbnbListingAirbnbListing
     */
    lat?: number;
    /**
     * 
     * @type {number}
     * @memberof AirbnbListingAirbnbListing
     */
    lng?: number;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    directions?: string;
    /**
     * 
     * @type {number}
     * @memberof AirbnbListingAirbnbListing
     */
    personCapacity?: number;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    synchronizationCategory?: string;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    listingNickname?: string;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    tier?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AirbnbListingAirbnbListing
     */
    displayExactLocationToGuest?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListing
     */
    houseManual?: string;
    /**
     * 
     * @type {Array<AirbnbListingAirbnbListingAmenitiesInner>}
     * @memberof AirbnbListingAirbnbListing
     */
    amenities?: Array<AirbnbListingAirbnbListingAmenitiesInner>;
    /**
     * 
     * @type {boolean}
     * @memberof AirbnbListingAirbnbListing
     */
    ratePlanEnabled?: boolean;
}

/**
 * Check if a given object implements the AirbnbListingAirbnbListing interface.
 */
export function instanceOfAirbnbListingAirbnbListing(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AirbnbListingAirbnbListingFromJSON(json: any): AirbnbListingAirbnbListing {
    return AirbnbListingAirbnbListingFromJSONTyped(json, false);
}

export function AirbnbListingAirbnbListingFromJSONTyped(json: any, ignoreDiscriminator: boolean): AirbnbListingAirbnbListing {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'propertyTypeCategory': !exists(json, 'property_type_category') ? undefined : json['property_type_category'],
        'roomTypeCategory': !exists(json, 'room_type_category') ? undefined : json['room_type_category'],
        'bedrooms': !exists(json, 'bedrooms') ? undefined : json['bedrooms'],
        'bathrooms': !exists(json, 'bathrooms') ? undefined : json['bathrooms'],
        'beds': !exists(json, 'beds') ? undefined : json['beds'],
        'checkInOption': !exists(json, 'check_in_option') ? undefined : AirbnbListingAirbnbListingCheckInOptionFromJSON(json['check_in_option']),
        'hasAvailability': !exists(json, 'has_availability') ? undefined : json['has_availability'],
        'street': !exists(json, 'street') ? undefined : json['street'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'zipcode': !exists(json, 'zipcode') ? undefined : json['zipcode'],
        'countryCode': !exists(json, 'country_code') ? undefined : json['country_code'],
        'lat': !exists(json, 'lat') ? undefined : json['lat'],
        'lng': !exists(json, 'lng') ? undefined : json['lng'],
        'directions': !exists(json, 'directions') ? undefined : json['directions'],
        'personCapacity': !exists(json, 'person_capacity') ? undefined : json['person_capacity'],
        'synchronizationCategory': !exists(json, 'synchronization_category') ? undefined : json['synchronization_category'],
        'listingNickname': !exists(json, 'listing_nickname') ? undefined : json['listing_nickname'],
        'tier': !exists(json, 'tier') ? undefined : json['tier'],
        'displayExactLocationToGuest': !exists(json, 'display_exact_location_to_guest') ? undefined : json['display_exact_location_to_guest'],
        'houseManual': !exists(json, 'house_manual') ? undefined : json['house_manual'],
        'amenities': !exists(json, 'amenities') ? undefined : ((json['amenities'] as Array<any>).map(AirbnbListingAirbnbListingAmenitiesInnerFromJSON)),
        'ratePlanEnabled': !exists(json, 'rate_plan_enabled') ? undefined : json['rate_plan_enabled'],
    };
}

export function AirbnbListingAirbnbListingToJSON(value?: AirbnbListingAirbnbListing | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'property_type_category': value.propertyTypeCategory,
        'room_type_category': value.roomTypeCategory,
        'bedrooms': value.bedrooms,
        'bathrooms': value.bathrooms,
        'beds': value.beds,
        'check_in_option': AirbnbListingAirbnbListingCheckInOptionToJSON(value.checkInOption),
        'has_availability': value.hasAvailability,
        'street': value.street,
        'city': value.city,
        'state': value.state,
        'zipcode': value.zipcode,
        'country_code': value.countryCode,
        'lat': value.lat,
        'lng': value.lng,
        'directions': value.directions,
        'person_capacity': value.personCapacity,
        'synchronization_category': value.synchronizationCategory,
        'listing_nickname': value.listingNickname,
        'tier': value.tier,
        'display_exact_location_to_guest': value.displayExactLocationToGuest,
        'house_manual': value.houseManual,
        'amenities': value.amenities === undefined ? undefined : ((value.amenities as Array<any>).map(AirbnbListingAirbnbListingAmenitiesInnerToJSON)),
        'rate_plan_enabled': value.ratePlanEnabled,
    };
}


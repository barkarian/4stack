/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InvoiceItem
 */
export interface InvoiceItem {
    /**
     * 
     * @type {number}
     * @memberof InvoiceItem
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof InvoiceItem
     */
    type?: InvoiceItemTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof InvoiceItem
     */
    bookingId?: number;
    /**
     * 
     * @type {number}
     * @memberof InvoiceItem
     */
    invoiceeId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof InvoiceItem
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceItem
     */
    status?: string;
    /**
     * Can be negative
     * @type {number}
     * @memberof InvoiceItem
     */
    qty?: number;
    /**
     * 
     * @type {number}
     * @memberof InvoiceItem
     */
    amount?: number;
    /**
     * 
     * @type {number}
     * @memberof InvoiceItem
     */
    lineTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof InvoiceItem
     */
    vatRate?: number;
    /**
     * 
     * @type {number}
     * @memberof InvoiceItem
     */
    createdBy?: number;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceItem
     */
    createTime?: Date;
}


/**
 * @export
 */
export const InvoiceItemTypeEnum = {
    Charge: 'charge',
    Payment: 'payment'
} as const;
export type InvoiceItemTypeEnum = typeof InvoiceItemTypeEnum[keyof typeof InvoiceItemTypeEnum];


/**
 * Check if a given object implements the InvoiceItem interface.
 */
export function instanceOfInvoiceItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InvoiceItemFromJSON(json: any): InvoiceItem {
    return InvoiceItemFromJSONTyped(json, false);
}

export function InvoiceItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'bookingId': !exists(json, 'bookingId') ? undefined : json['bookingId'],
        'invoiceeId': !exists(json, 'invoiceeId') ? undefined : json['invoiceeId'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'qty': !exists(json, 'qty') ? undefined : json['qty'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'lineTotal': !exists(json, 'lineTotal') ? undefined : json['lineTotal'],
        'vatRate': !exists(json, 'vatRate') ? undefined : json['vatRate'],
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'createTime': !exists(json, 'createTime') ? undefined : (new Date(json['createTime'])),
    };
}

export function InvoiceItemToJSON(value?: InvoiceItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'bookingId': value.bookingId,
        'invoiceeId': value.invoiceeId,
        'description': value.description,
        'status': value.status,
        'qty': value.qty,
        'amount': value.amount,
        'lineTotal': value.lineTotal,
        'vatRate': value.vatRate,
        'createdBy': value.createdBy,
        'createTime': value.createTime === undefined ? undefined : (value.createTime.toISOString()),
    };
}


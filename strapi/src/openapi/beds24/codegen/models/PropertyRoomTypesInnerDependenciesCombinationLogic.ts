/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyRoomTypesInnerDependenciesCombinationLogic
 */
export interface PropertyRoomTypesInnerDependenciesCombinationLogic {
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerDependenciesCombinationLogic
     */
    type?: PropertyRoomTypesInnerDependenciesCombinationLogicTypeEnum;
    /**
     * Used to specify the number of units value if type is set to numberOfUnitsAvailable or NumberOfUnitsAvailableOrLess
     * @type {number}
     * @memberof PropertyRoomTypesInnerDependenciesCombinationLogic
     */
    numberOfUnitsValue?: number | null;
}


/**
 * @export
 */
export const PropertyRoomTypesInnerDependenciesCombinationLogicTypeEnum = {
    SumAllBookings: 'sumAllBookings',
    AllRoomsAvailable: 'allRoomsAvailable',
    AnyRoomAvailable: 'anyRoomAvailable',
    NoUnitsAvailable: 'noUnitsAvailable',
    NumberOfUnitsAvailable: 'numberOfUnitsAvailable',
    NumberOfUnitsAvailableOrLess: 'numberOfUnitsAvailableOrLess'
} as const;
export type PropertyRoomTypesInnerDependenciesCombinationLogicTypeEnum = typeof PropertyRoomTypesInnerDependenciesCombinationLogicTypeEnum[keyof typeof PropertyRoomTypesInnerDependenciesCombinationLogicTypeEnum];


/**
 * Check if a given object implements the PropertyRoomTypesInnerDependenciesCombinationLogic interface.
 */
export function instanceOfPropertyRoomTypesInnerDependenciesCombinationLogic(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyRoomTypesInnerDependenciesCombinationLogicFromJSON(json: any): PropertyRoomTypesInnerDependenciesCombinationLogic {
    return PropertyRoomTypesInnerDependenciesCombinationLogicFromJSONTyped(json, false);
}

export function PropertyRoomTypesInnerDependenciesCombinationLogicFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyRoomTypesInnerDependenciesCombinationLogic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'numberOfUnitsValue': !exists(json, 'numberOfUnitsValue') ? undefined : json['numberOfUnitsValue'],
    };
}

export function PropertyRoomTypesInnerDependenciesCombinationLogicToJSON(value?: PropertyRoomTypesInnerDependenciesCombinationLogic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'numberOfUnitsValue': value.numberOfUnitsValue,
    };
}


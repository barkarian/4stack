/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyTemplates
 */
export interface PropertyTemplates {
    /**
     * 
     * @type {string}
     * @memberof PropertyTemplates
     */
    template1?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyTemplates
     */
    template2?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyTemplates
     */
    template3?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyTemplates
     */
    template4?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyTemplates
     */
    template5?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyTemplates
     */
    template6?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyTemplates
     */
    template7?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyTemplates
     */
    template8?: string;
}

/**
 * Check if a given object implements the PropertyTemplates interface.
 */
export function instanceOfPropertyTemplates(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyTemplatesFromJSON(json: any): PropertyTemplates {
    return PropertyTemplatesFromJSONTyped(json, false);
}

export function PropertyTemplatesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyTemplates {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'template1': !exists(json, 'template1') ? undefined : json['template1'],
        'template2': !exists(json, 'template2') ? undefined : json['template2'],
        'template3': !exists(json, 'template3') ? undefined : json['template3'],
        'template4': !exists(json, 'template4') ? undefined : json['template4'],
        'template5': !exists(json, 'template5') ? undefined : json['template5'],
        'template6': !exists(json, 'template6') ? undefined : json['template6'],
        'template7': !exists(json, 'template7') ? undefined : json['template7'],
        'template8': !exists(json, 'template8') ? undefined : json['template8'],
    };
}

export function PropertyTemplatesToJSON(value?: PropertyTemplates | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'template1': value.template1,
        'template2': value.template2,
        'template3': value.template3,
        'template4': value.template4,
        'template5': value.template5,
        'template6': value.template6,
        'template7': value.template7,
        'template8': value.template8,
    };
}


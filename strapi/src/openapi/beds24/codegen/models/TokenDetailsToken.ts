/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenDetailsToken
 */
export interface TokenDetailsToken {
    /**
     * 
     * @type {number}
     * @memberof TokenDetailsToken
     */
    ownerId?: number;
    /**
     * 
     * @type {number}
     * @memberof TokenDetailsToken
     */
    expiresIn?: number;
    /**
     * 
     * @type {Date}
     * @memberof TokenDetailsToken
     */
    created?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof TokenDetailsToken
     */
    scopes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TokenDetailsToken
     */
    deviceName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TokenDetailsToken
     */
    linkedProperties?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TokenDetailsToken
     */
    whiteListOnly?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof TokenDetailsToken
     */
    whiteList?: Array<string>;
}

/**
 * Check if a given object implements the TokenDetailsToken interface.
 */
export function instanceOfTokenDetailsToken(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TokenDetailsTokenFromJSON(json: any): TokenDetailsToken {
    return TokenDetailsTokenFromJSONTyped(json, false);
}

export function TokenDetailsTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenDetailsToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'expiresIn': !exists(json, 'expiresIn') ? undefined : json['expiresIn'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
        'deviceName': !exists(json, 'deviceName') ? undefined : json['deviceName'],
        'linkedProperties': !exists(json, 'linkedProperties') ? undefined : json['linkedProperties'],
        'whiteListOnly': !exists(json, 'whiteListOnly') ? undefined : json['whiteListOnly'],
        'whiteList': !exists(json, 'whiteList') ? undefined : json['whiteList'],
    };
}

export function TokenDetailsTokenToJSON(value?: TokenDetailsToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ownerId': value.ownerId,
        'expiresIn': value.expiresIn,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'scopes': value.scopes,
        'deviceName': value.deviceName,
        'linkedProperties': value.linkedProperties,
        'whiteListOnly': value.whiteListOnly,
        'whiteList': value.whiteList,
    };
}


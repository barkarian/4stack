/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyPaymentGatewaysAsiapay
 */
export interface PropertyPaymentGatewaysAsiapay {
    /**
     * 
     * @type {string}
     * @memberof PropertyPaymentGatewaysAsiapay
     */
    type?: PropertyPaymentGatewaysAsiapayTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof PropertyPaymentGatewaysAsiapay
     */
    priority?: number;
}


/**
 * @export
 */
export const PropertyPaymentGatewaysAsiapayTypeEnum = {
    Enable: 'enable',
    Disable: 'disable'
} as const;
export type PropertyPaymentGatewaysAsiapayTypeEnum = typeof PropertyPaymentGatewaysAsiapayTypeEnum[keyof typeof PropertyPaymentGatewaysAsiapayTypeEnum];


/**
 * Check if a given object implements the PropertyPaymentGatewaysAsiapay interface.
 */
export function instanceOfPropertyPaymentGatewaysAsiapay(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyPaymentGatewaysAsiapayFromJSON(json: any): PropertyPaymentGatewaysAsiapay {
    return PropertyPaymentGatewaysAsiapayFromJSONTyped(json, false);
}

export function PropertyPaymentGatewaysAsiapayFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyPaymentGatewaysAsiapay {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
    };
}

export function PropertyPaymentGatewaysAsiapayToJSON(value?: PropertyPaymentGatewaysAsiapay | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'priority': value.priority,
    };
}


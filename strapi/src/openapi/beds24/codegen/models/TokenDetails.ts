/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TokenDetailsDiagnostics } from './TokenDetailsDiagnostics';
import {
    TokenDetailsDiagnosticsFromJSON,
    TokenDetailsDiagnosticsFromJSONTyped,
    TokenDetailsDiagnosticsToJSON,
} from './TokenDetailsDiagnostics';
import type { TokenDetailsToken } from './TokenDetailsToken';
import {
    TokenDetailsTokenFromJSON,
    TokenDetailsTokenFromJSONTyped,
    TokenDetailsTokenToJSON,
} from './TokenDetailsToken';

/**
 * 
 * @export
 * @interface TokenDetails
 */
export interface TokenDetails {
    /**
     * 
     * @type {boolean}
     * @memberof TokenDetails
     */
    validToken?: boolean;
    /**
     * 
     * @type {TokenDetailsToken}
     * @memberof TokenDetails
     */
    token?: TokenDetailsToken;
    /**
     * 
     * @type {TokenDetailsDiagnostics}
     * @memberof TokenDetails
     */
    diagnostics?: TokenDetailsDiagnostics;
}

/**
 * Check if a given object implements the TokenDetails interface.
 */
export function instanceOfTokenDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TokenDetailsFromJSON(json: any): TokenDetails {
    return TokenDetailsFromJSONTyped(json, false);
}

export function TokenDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'validToken': !exists(json, 'validToken') ? undefined : json['validToken'],
        'token': !exists(json, 'token') ? undefined : TokenDetailsTokenFromJSON(json['token']),
        'diagnostics': !exists(json, 'diagnostics') ? undefined : TokenDetailsDiagnosticsFromJSON(json['diagnostics']),
    };
}

export function TokenDetailsToJSON(value?: TokenDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'validToken': value.validToken,
        'token': TokenDetailsTokenToJSON(value.token),
        'diagnostics': TokenDetailsDiagnosticsToJSON(value.diagnostics),
    };
}


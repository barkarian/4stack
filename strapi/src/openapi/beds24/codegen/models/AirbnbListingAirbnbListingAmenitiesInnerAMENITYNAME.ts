/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAME
 */
export interface AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAME {
    /**
     * 
     * @type {string}
     * @memberof AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAME
     */
    instruction?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAME
     */
    isPresent?: boolean;
}

/**
 * Check if a given object implements the AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAME interface.
 */
export function instanceOfAirbnbListingAirbnbListingAmenitiesInnerAMENITYNAME(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAMEFromJSON(json: any): AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAME {
    return AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAMEFromJSONTyped(json, false);
}

export function AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAMEFromJSONTyped(json: any, ignoreDiscriminator: boolean): AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAME {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'instruction': !exists(json, 'instruction') ? undefined : json['instruction'],
        'isPresent': !exists(json, 'is_present') ? undefined : json['is_present'],
    };
}

export function AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAMEToJSON(value?: AirbnbListingAirbnbListingAmenitiesInnerAMENITYNAME | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'instruction': value.instruction,
        'is_present': value.isPresent,
    };
}


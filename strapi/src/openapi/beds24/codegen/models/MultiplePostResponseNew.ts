/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MultiplePostResponseNewSubFieldInner } from './MultiplePostResponseNewSubFieldInner';
import {
    MultiplePostResponseNewSubFieldInnerFromJSON,
    MultiplePostResponseNewSubFieldInnerFromJSONTyped,
    MultiplePostResponseNewSubFieldInnerToJSON,
} from './MultiplePostResponseNewSubFieldInner';

/**
 * 
 * @export
 * @interface MultiplePostResponseNew
 */
export interface MultiplePostResponseNew {
    /**
     * 
     * @type {string}
     * @memberof MultiplePostResponseNew
     */
    field?: string;
    /**
     * 
     * @type {Array<MultiplePostResponseNewSubFieldInner>}
     * @memberof MultiplePostResponseNew
     */
    subField?: Array<MultiplePostResponseNewSubFieldInner>;
}

/**
 * Check if a given object implements the MultiplePostResponseNew interface.
 */
export function instanceOfMultiplePostResponseNew(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MultiplePostResponseNewFromJSON(json: any): MultiplePostResponseNew {
    return MultiplePostResponseNewFromJSONTyped(json, false);
}

export function MultiplePostResponseNewFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultiplePostResponseNew {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'field': !exists(json, 'field') ? undefined : json['field'],
        'subField': !exists(json, 'subField') ? undefined : ((json['subField'] as Array<any>).map(MultiplePostResponseNewSubFieldInnerFromJSON)),
    };
}

export function MultiplePostResponseNewToJSON(value?: MultiplePostResponseNew | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'field': value.field,
        'subField': value.subField === undefined ? undefined : ((value.subField as Array<any>).map(MultiplePostResponseNewSubFieldInnerToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PropertyPaymentCollectionDepositPayment1 } from './PropertyPaymentCollectionDepositPayment1';
import {
    PropertyPaymentCollectionDepositPayment1FromJSON,
    PropertyPaymentCollectionDepositPayment1FromJSONTyped,
    PropertyPaymentCollectionDepositPayment1ToJSON,
} from './PropertyPaymentCollectionDepositPayment1';

/**
 * 
 * @export
 * @interface PropertyPaymentCollection
 */
export interface PropertyPaymentCollection {
    /**
     * 
     * @type {string}
     * @memberof PropertyPaymentCollection
     */
    depositNonPayment?: PropertyPaymentCollectionDepositNonPaymentEnum;
    /**
     * 
     * @type {PropertyPaymentCollectionDepositPayment1}
     * @memberof PropertyPaymentCollection
     */
    depositPayment1?: PropertyPaymentCollectionDepositPayment1;
    /**
     * 
     * @type {PropertyPaymentCollectionDepositPayment1}
     * @memberof PropertyPaymentCollection
     */
    depositPayment2?: PropertyPaymentCollectionDepositPayment1;
}


/**
 * @export
 */
export const PropertyPaymentCollectionDepositNonPaymentEnum = {
    Request: 'request',
    Cancel: 'cancel'
} as const;
export type PropertyPaymentCollectionDepositNonPaymentEnum = typeof PropertyPaymentCollectionDepositNonPaymentEnum[keyof typeof PropertyPaymentCollectionDepositNonPaymentEnum];


/**
 * Check if a given object implements the PropertyPaymentCollection interface.
 */
export function instanceOfPropertyPaymentCollection(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyPaymentCollectionFromJSON(json: any): PropertyPaymentCollection {
    return PropertyPaymentCollectionFromJSONTyped(json, false);
}

export function PropertyPaymentCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyPaymentCollection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'depositNonPayment': !exists(json, 'depositNonPayment') ? undefined : json['depositNonPayment'],
        'depositPayment1': !exists(json, 'depositPayment1') ? undefined : PropertyPaymentCollectionDepositPayment1FromJSON(json['depositPayment1']),
        'depositPayment2': !exists(json, 'depositPayment2') ? undefined : PropertyPaymentCollectionDepositPayment1FromJSON(json['depositPayment2']),
    };
}

export function PropertyPaymentCollectionToJSON(value?: PropertyPaymentCollection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'depositNonPayment': value.depositNonPayment,
        'depositPayment1': PropertyPaymentCollectionDepositPayment1ToJSON(value.depositPayment1),
        'depositPayment2': PropertyPaymentCollectionDepositPayment1ToJSON(value.depositPayment2),
    };
}


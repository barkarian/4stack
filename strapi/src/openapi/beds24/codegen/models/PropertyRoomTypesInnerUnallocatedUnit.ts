/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyRoomTypesInnerUnallocatedUnit
 */
export interface PropertyRoomTypesInnerUnallocatedUnit {
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerUnallocatedUnit
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerUnallocatedUnit
     */
    name2?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyRoomTypesInnerUnallocatedUnit
     */
    name3?: string;
}

/**
 * Check if a given object implements the PropertyRoomTypesInnerUnallocatedUnit interface.
 */
export function instanceOfPropertyRoomTypesInnerUnallocatedUnit(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyRoomTypesInnerUnallocatedUnitFromJSON(json: any): PropertyRoomTypesInnerUnallocatedUnit {
    return PropertyRoomTypesInnerUnallocatedUnitFromJSONTyped(json, false);
}

export function PropertyRoomTypesInnerUnallocatedUnitFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyRoomTypesInnerUnallocatedUnit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'name2': !exists(json, 'name2') ? undefined : json['name2'],
        'name3': !exists(json, 'name3') ? undefined : json['name3'],
    };
}

export function PropertyRoomTypesInnerUnallocatedUnitToJSON(value?: PropertyRoomTypesInnerUnallocatedUnit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'name2': value.name2,
        'name3': value.name3,
    };
}


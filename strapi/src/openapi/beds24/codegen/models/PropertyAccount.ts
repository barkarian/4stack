/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PropertyAccountUnitStatusesInner } from './PropertyAccountUnitStatusesInner';
import {
    PropertyAccountUnitStatusesInnerFromJSON,
    PropertyAccountUnitStatusesInnerFromJSONTyped,
    PropertyAccountUnitStatusesInnerToJSON,
} from './PropertyAccountUnitStatusesInner';

/**
 * contains useful read only info about the account.
 * @export
 * @interface PropertyAccount
 */
export interface PropertyAccount {
    /**
     * 
     * @type {number}
     * @memberof PropertyAccount
     */
    ownerId?: number;
    /**
     * Possible statusText values for units.
     * @type {Array<PropertyAccountUnitStatusesInner>}
     * @memberof PropertyAccount
     */
    unitStatuses?: Array<PropertyAccountUnitStatusesInner>;
}

/**
 * Check if a given object implements the PropertyAccount interface.
 */
export function instanceOfPropertyAccount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyAccountFromJSON(json: any): PropertyAccount {
    return PropertyAccountFromJSONTyped(json, false);
}

export function PropertyAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'unitStatuses': !exists(json, 'unitStatuses') ? undefined : ((json['unitStatuses'] as Array<any>).map(PropertyAccountUnitStatusesInnerFromJSON)),
    };
}

export function PropertyAccountToJSON(value?: PropertyAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ownerId': value.ownerId,
        'unitStatuses': value.unitStatuses === undefined ? undefined : ((value.unitStatuses as Array<any>).map(PropertyAccountUnitStatusesInnerToJSON)),
    };
}


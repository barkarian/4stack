/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PropertyBookingRulesAllowGuestCancellation } from './PropertyBookingRulesAllowGuestCancellation';
import {
    PropertyBookingRulesAllowGuestCancellationFromJSON,
    PropertyBookingRulesAllowGuestCancellationFromJSONTyped,
    PropertyBookingRulesAllowGuestCancellationToJSON,
} from './PropertyBookingRulesAllowGuestCancellation';

/**
 * 
 * @export
 * @interface PropertyBookingRules
 */
export interface PropertyBookingRules {
    /**
     * 
     * @type {string}
     * @memberof PropertyBookingRules
     */
    bookingType?: PropertyBookingRulesBookingTypeEnum;
    /**
     * Set to 0 for same day arrival. Set to null to disable.
     * @type {number}
     * @memberof PropertyBookingRules
     */
    bookingNearTypeDays?: number | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyBookingRules
     */
    bookingNearType?: PropertyBookingRulesBookingNearTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PropertyBookingRules
     */
    bookingExceptionalType?: PropertyBookingRulesBookingExceptionalTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof PropertyBookingRules
     */
    bookingExceptionalTypeStart?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PropertyBookingRules
     */
    bookingExceptionalTypeEnd?: Date;
    /**
     * 
     * @type {number}
     * @memberof PropertyBookingRules
     */
    bookingCutOffHour?: number;
    /**
     * 
     * @type {string}
     * @memberof PropertyBookingRules
     */
    dailyPriceStrategy?: PropertyBookingRulesDailyPriceStrategyEnum;
    /**
     * 
     * @type {string}
     * @memberof PropertyBookingRules
     */
    dailyPriceType?: PropertyBookingRulesDailyPriceTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof PropertyBookingRules
     */
    vatRatePercentage?: number;
    /**
     * 
     * @type {string}
     * @memberof PropertyBookingRules
     */
    priceRounding?: PropertyBookingRulesPriceRoundingEnum;
    /**
     * 
     * @type {PropertyBookingRulesAllowGuestCancellation}
     * @memberof PropertyBookingRules
     */
    allowGuestCancellation?: PropertyBookingRulesAllowGuestCancellation;
}


/**
 * @export
 */
export const PropertyBookingRulesBookingTypeEnum = {
    BlackoutPeriod: 'blackoutPeriod',
    AutoConfirmed: 'autoConfirmed',
    RequestWithManualConfirmation: 'requestWithManualConfirmation',
    RequestWithCreditCard: 'requestWithCreditCard',
    ConfirmedWithCreditCard: 'confirmedWithCreditCard',
    ConfirmedWithDepositCollection1: 'confirmedWithDepositCollection1',
    ConfirmedWithDepositCollection2: 'confirmedWithDepositCollection2'
} as const;
export type PropertyBookingRulesBookingTypeEnum = typeof PropertyBookingRulesBookingTypeEnum[keyof typeof PropertyBookingRulesBookingTypeEnum];

/**
 * @export
 */
export const PropertyBookingRulesBookingNearTypeEnum = {
    BlackoutPeriod: 'blackoutPeriod',
    AutoConfirmed: 'autoConfirmed',
    RequestWithManualConfirmation: 'requestWithManualConfirmation',
    RequestWithCreditCard: 'requestWithCreditCard',
    ConfirmedWithCreditCard: 'confirmedWithCreditCard',
    ConfirmedWithDepositCollection1: 'confirmedWithDepositCollection1',
    ConfirmedWithDepositCollection2: 'confirmedWithDepositCollection2'
} as const;
export type PropertyBookingRulesBookingNearTypeEnum = typeof PropertyBookingRulesBookingNearTypeEnum[keyof typeof PropertyBookingRulesBookingNearTypeEnum];

/**
 * @export
 */
export const PropertyBookingRulesBookingExceptionalTypeEnum = {
    BlackoutPeriod: 'blackoutPeriod',
    AutoConfirmed: 'autoConfirmed',
    RequestWithManualConfirmation: 'requestWithManualConfirmation',
    RequestWithCreditCard: 'requestWithCreditCard',
    ConfirmedWithCreditCard: 'confirmedWithCreditCard',
    ConfirmedWithDepositCollection1: 'confirmedWithDepositCollection1',
    ConfirmedWithDepositCollection2: 'confirmedWithDepositCollection2'
} as const;
export type PropertyBookingRulesBookingExceptionalTypeEnum = typeof PropertyBookingRulesBookingExceptionalTypeEnum[keyof typeof PropertyBookingRulesBookingExceptionalTypeEnum];

/**
 * @export
 */
export const PropertyBookingRulesDailyPriceStrategyEnum = {
    AllowLower: 'allowLower',
    DoNotAllowLower: 'doNotAllowLower',
    DoNotAllowOtherRates: 'doNotAllowOtherRates'
} as const;
export type PropertyBookingRulesDailyPriceStrategyEnum = typeof PropertyBookingRulesDailyPriceStrategyEnum[keyof typeof PropertyBookingRulesDailyPriceStrategyEnum];

/**
 * @export
 */
export const PropertyBookingRulesDailyPriceTypeEnum = {
    Default: 'default',
    RequestWithManualConfirmation: 'requestWithManualConfirmation',
    RequestWithCreditCard: 'requestWithCreditCard',
    ConfirmedWithCreditCard: 'confirmedWithCreditCard',
    ConfirmedWithDepositCollection1: 'confirmedWithDepositCollection1',
    ConfirmedWithDepositCollection2: 'confirmedWithDepositCollection2'
} as const;
export type PropertyBookingRulesDailyPriceTypeEnum = typeof PropertyBookingRulesDailyPriceTypeEnum[keyof typeof PropertyBookingRulesDailyPriceTypeEnum];

/**
 * @export
 */
export const PropertyBookingRulesPriceRoundingEnum = {
    _100000: '+1000.00',
    _50000: '+500.00',
    _20000: '+200.00',
    _10000: '+100.00',
    _5000: '+50.00',
    _2000: '+20.00',
    _1000: '+10.00',
    _500: '+5.00',
    _200: '+2.00',
    _100: '+1.00',
    _050: '+0.50',
    _020: '+0.20',
    _010: '+0.10',
    None: 'none',
    NearestOne: 'nearestOne',
    NearestTen: 'nearestTen',
    NearestHundred: 'nearestHundred',
    NearestThousand: 'nearestThousand',
    _0102: '-0.10',
    _0202: '-0.20',
    _0502: '-0.50',
    _1002: '-1.00',
    _2002: '-2.00',
    _5002: '-5.00',
    _10002: '-10.00',
    _20002: '-20.00',
    _50002: '-50.00',
    _100002: '-100.00',
    _200002: '-200.00',
    _500002: '-500.00',
    _1000002: '-1000.00'
} as const;
export type PropertyBookingRulesPriceRoundingEnum = typeof PropertyBookingRulesPriceRoundingEnum[keyof typeof PropertyBookingRulesPriceRoundingEnum];


/**
 * Check if a given object implements the PropertyBookingRules interface.
 */
export function instanceOfPropertyBookingRules(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyBookingRulesFromJSON(json: any): PropertyBookingRules {
    return PropertyBookingRulesFromJSONTyped(json, false);
}

export function PropertyBookingRulesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyBookingRules {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookingType': !exists(json, 'bookingType') ? undefined : json['bookingType'],
        'bookingNearTypeDays': !exists(json, 'bookingNearTypeDays') ? undefined : json['bookingNearTypeDays'],
        'bookingNearType': !exists(json, 'bookingNearType') ? undefined : json['bookingNearType'],
        'bookingExceptionalType': !exists(json, 'bookingExceptionalType') ? undefined : json['bookingExceptionalType'],
        'bookingExceptionalTypeStart': !exists(json, 'bookingExceptionalTypeStart') ? undefined : (new Date(json['bookingExceptionalTypeStart'])),
        'bookingExceptionalTypeEnd': !exists(json, 'bookingExceptionalTypeEnd') ? undefined : (new Date(json['bookingExceptionalTypeEnd'])),
        'bookingCutOffHour': !exists(json, 'bookingCutOffHour') ? undefined : json['bookingCutOffHour'],
        'dailyPriceStrategy': !exists(json, 'dailyPriceStrategy') ? undefined : json['dailyPriceStrategy'],
        'dailyPriceType': !exists(json, 'dailyPriceType') ? undefined : json['dailyPriceType'],
        'vatRatePercentage': !exists(json, 'vatRatePercentage') ? undefined : json['vatRatePercentage'],
        'priceRounding': !exists(json, 'priceRounding') ? undefined : json['priceRounding'],
        'allowGuestCancellation': !exists(json, 'allowGuestCancellation') ? undefined : PropertyBookingRulesAllowGuestCancellationFromJSON(json['allowGuestCancellation']),
    };
}

export function PropertyBookingRulesToJSON(value?: PropertyBookingRules | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookingType': value.bookingType,
        'bookingNearTypeDays': value.bookingNearTypeDays,
        'bookingNearType': value.bookingNearType,
        'bookingExceptionalType': value.bookingExceptionalType,
        'bookingExceptionalTypeStart': value.bookingExceptionalTypeStart === undefined ? undefined : (value.bookingExceptionalTypeStart.toISOString().substring(0,10)),
        'bookingExceptionalTypeEnd': value.bookingExceptionalTypeEnd === undefined ? undefined : (value.bookingExceptionalTypeEnd.toISOString().substring(0,10)),
        'bookingCutOffHour': value.bookingCutOffHour,
        'dailyPriceStrategy': value.dailyPriceStrategy,
        'dailyPriceType': value.dailyPriceType,
        'vatRatePercentage': value.vatRatePercentage,
        'priceRounding': value.priceRounding,
        'allowGuestCancellation': PropertyBookingRulesAllowGuestCancellationToJSON(value.allowGuestCancellation),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * API V2
 * For more information see [wiki.beds24.com/index.php/API_V2.0](https://wiki.beds24.com/index.php/API_V2.0)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyBookingQuestionsCustomQuestion1
 */
export interface PropertyBookingQuestionsCustomQuestion1 {
    /**
     * 
     * @type {number}
     * @memberof PropertyBookingQuestionsCustomQuestion1
     */
    order?: number;
    /**
     * 
     * @type {string}
     * @memberof PropertyBookingQuestionsCustomQuestion1
     */
    usage?: PropertyBookingQuestionsCustomQuestion1UsageEnum;
    /**
     * 
     * @type {string}
     * @memberof PropertyBookingQuestionsCustomQuestion1
     */
    type?: PropertyBookingQuestionsCustomQuestion1TypeEnum;
}


/**
 * @export
 */
export const PropertyBookingQuestionsCustomQuestion1UsageEnum = {
    NotUsed: 'notUsed',
    Optional: 'optional',
    Compulsory: 'compulsory',
    CompulsoryBookingPage: 'compulsoryBookingPage',
    Internal: 'internal'
} as const;
export type PropertyBookingQuestionsCustomQuestion1UsageEnum = typeof PropertyBookingQuestionsCustomQuestion1UsageEnum[keyof typeof PropertyBookingQuestionsCustomQuestion1UsageEnum];

/**
 * @export
 */
export const PropertyBookingQuestionsCustomQuestion1TypeEnum = {
    SingleLineField: 'singleLineField',
    MultiLineField: 'multiLineField',
    MultipleList: 'multipleList',
    MultipleSelect: 'multipleSelect',
    TickBox: 'tickBox',
    DateSelector: 'dateSelector'
} as const;
export type PropertyBookingQuestionsCustomQuestion1TypeEnum = typeof PropertyBookingQuestionsCustomQuestion1TypeEnum[keyof typeof PropertyBookingQuestionsCustomQuestion1TypeEnum];


/**
 * Check if a given object implements the PropertyBookingQuestionsCustomQuestion1 interface.
 */
export function instanceOfPropertyBookingQuestionsCustomQuestion1(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyBookingQuestionsCustomQuestion1FromJSON(json: any): PropertyBookingQuestionsCustomQuestion1 {
    return PropertyBookingQuestionsCustomQuestion1FromJSONTyped(json, false);
}

export function PropertyBookingQuestionsCustomQuestion1FromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyBookingQuestionsCustomQuestion1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'order': !exists(json, 'order') ? undefined : json['order'],
        'usage': !exists(json, 'usage') ? undefined : json['usage'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function PropertyBookingQuestionsCustomQuestion1ToJSON(value?: PropertyBookingQuestionsCustomQuestion1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'order': value.order,
        'usage': value.usage,
        'type': value.type,
    };
}

